{
    "name": "Add 50 pieces of Collateral to a Loan",
    "object": null,
    "package":  ["LLC_BI"],
    "script": "Integer totalLoans=1;Account acct=[SELECT Id FROM Account LIMIT 1];List<SObject>relatedToInsert=new List<SObject>();List<LLC_BI__Loan__c>allLoans=new List<LLC_BI__Loan__c>();allLoans.add(new LLC_BI__Loan__c(Id='INSERT LOAN SFID',LLC_BI__lookupKey__c='INSERT LOOKUP KEY HERE',LLC_BI__Loan_Collateral_Aggregate__c='INSERT SFID HERE'));List<LLC_BI__Collateral__c>cols=createMgmt(50);List<LLC_BI__Loan_Collateral_Aggregate__c>lcas;if(allLoans.size()==1){lcas=getLCAs(allLoans.get(0))}else{LLC_BI__Product_Package__c prodPkg=new LLC_BI__Product_Package__c(Name='Credit Action Test');insert prodPkg;Id packageId=prodPkg.Id;lcas=createLCAs(1);List<LLC_BI__Loan__c>newLoans=createFacilities(packageId,'LoanWith300Collateral',1,acct);allLoans.addAll(newLoans)}List<SObject>toInsert=new List<SObject>();toInsert.addAll(cols);insert toInsert;for(Integer i=0;i<allLoans.size();i++){allLoans[i].LLC_BI__Loan_Collateral_Aggregate__c=lcas[i].Id}update allLoans;for(Integer i=0;i<totalLoans;i++){relatedToInsert.add(createEntity(acct,allLoans[i]))}for(Integer i=0;i<cols.size();i++){relatedToInsert.add(createPledge(allLoans[0],cols[i]))}insert relatedToInsert;public List<SObject>createFacilities(Id packageId,String name,Integer childNumber,Account acct){List<SObject>objs=new List<SObject>();List<LLC_BI__Loan__c>loans=new List<LLC_BI__Loan__c>();for(Integer i=1;i<=childNumber;i++){LLC_BI__Loan__c loan=new LLC_BI__Loan__c(Name=name+' '+i,LLC_BI__Product_Package__c=packageId,LLC_BI__Amount__c=1000-i,LLC_BI__Stage__c='Closed Funded',LLC_BI__Status__c='Open',LLC_BI__lookupKey__c=name+'_'+i,LLC_BI__Product_Line__c='Test Product Line 1',LLC_BI__Product_Type__c='Test Product Type 1',LLC_BI__Product__c='Test Product 1',LLC_BI__Structure__c='Multi Level Future');objs.add(loan);objs.add(createEntity(acct,loan));loans.add(loan)}insert loans;return loans}public LLC_BI__Legal_Entities__c createEntity(Account acct,LLC_BI__Loan__c loan){LLC_BI__Legal_Entities__c entity=new LLC_BI__Legal_Entities__c(LLC_BI__Loan__r=new LLC_BI__Loan__c(LLC_BI__lookupKey__c=loan.LLC_BI__lookupKey__c),LLC_BI__Account__c=acct.Id);return entity}public List<LLC_BI__Collateral__c>createMgmt(Integer toCreate){List<LLC_BI__Collateral_Type__c>colTypes=[SELECT Id FROM LLC_BI__Collateral_Type__c];LLC_BI__Collateral_Type__c colType;if(colTypes.size()==0){colType=createCollateralType()}else{colType=colTypes[0]}List<LLC_BI__Collateral__c>cols=new List<LLC_BI__Collateral__c>();for(Integer i=0;i<toCreate;i++){cols.add(new LLC_BI__Collateral__c(LLC_BI__Value__c=100,LLC_BI__Collateral_Type__c=colType.Id))}return cols}private LLC_BI__Collateral_Type__c createCollateralType(){LLC_BI__Collateral_Type__c testCollateralType=new LLC_BI__Collateral_Type__c(LLC_BI__Type__c='Test Type',LLC_BI__Subtype__c='Test Sub Type',LLC_BI__Advance_Rate__c=100.00);insert testCollateralType;return testCollateralType}public List<LLC_BI__Loan_Collateral_Aggregate__c>createLCAs(Integer toCreate){List<LLC_BI__Loan_Collateral_Aggregate__c>toInsert=new List<LLC_BI__Loan_Collateral_Aggregate__c>();for(Integer i=0;i<toCreate;i++){toInsert.add(new LLC_BI__Loan_Collateral_Aggregate__c())}return toInsert}public List<LLC_BI__Loan_Collateral_Aggregate__c>getLCAs(LLC_BI__Loan__c loan){return[SELECTIdFROMLLC_BI__Loan_Collateral_Aggregate__cWHEREId=:loan.LLC_BI__Loan_Collateral_Aggregate__c]}public LLC_BI__Loan_Collateral2__c createPledge(LLC_BI__Loan__c loan,LLC_BI__Collateral__c col){return new LLC_BI__Loan_Collateral2__c(LLC_BI__Collateral__c=col.Id,LLC_BI__Loan__c=loan.Id,LLC_BI__Amount_Pledged__c=col.LLC_BI__Lendable_Value__c,LLC_BI__Loan_Collateral_Aggregate__c=loan.LLC_BI__Loan_Collateral_Aggregate__c)}",
    "description": "This script adds 50 pieces of Collateral to a Loan",
    "id": 3, 
    "variables": null
}